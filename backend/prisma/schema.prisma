// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hobbies {
  id          Int       @default(autoincrement()) @id
  name        String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())

  peoples     HobbiesOnPeoples[]
}

model Peoples {
  id          Int       @default(autoincrement()) @id
  name        String
  dob         DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())

  PhoneNumbers PhoneNumbers[]
  IdCard      IdCard?
  hobbies     HobbiesOnPeoples[]
}

model PhoneNumbers {
  id          Int       @default(autoincrement()) @id
  number      String
  people_id   Int
  people      Peoples   @relation(fields: [people_id], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model IdCard {
  id          Int       @default(autoincrement()) @id
  number      String
  people_id   Int       @unique
  people      Peoples   @relation(fields: [people_id], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model HobbiesOnPeoples {
  hobbie_id   Int
  hobbie      Hobbies   @relation(fields: [hobbie_id], references: [id], onDelete: Cascade)
  people_id   Int
  people      Peoples   @relation(fields: [people_id], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())
  @@id([hobbie_id, people_id])
}
